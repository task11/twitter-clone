{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","tweetTextRef","doc","id","onDeleteClick","window","confirm","deleteDoc","attachmentURL","deleteObject","ref","updateDoc","toggleEditing","autoFocus","src","alt","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","htmlFor","faPlus","accept","imgFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","q","query","orderBy","onSnapshot","querySnapshot","tweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshAuth","navigate","useNavigate","newDisplayName","setDisplayName","getMyTweets","where","getDocs","forEach","updateProfile","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","path","element","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","currentUser","Object","assign","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de0a72b0.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\"\nimport { getStorage } from \"firebase/storage\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();","import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from \"@firebase/auth\";\nimport { authService } from \"myBase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        data = await signInWithEmailAndPassword(\n          authService,\n          email,\n          password\n        )\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const onChange = (event) => {\n    const { target: { name, value } } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n}\n\nexport default AuthForm;\n\n","import { authService } from \"myBase\";\nimport {\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  signInWithPopup\n} from 'firebase/auth';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const { target: { name } } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    await signInWithPopup(authService, provider);\n  }\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>);\n}\nexport default Auth;","import { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { dbService, storageService } from \"myBase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const tweetTextRef = doc(dbService, \"tweets\", `${tweetObj.id}`);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n    if (ok) {\n      await deleteDoc(tweetTextRef);\n      if (tweetObj.attachmentURL) {\n        await deleteObject(ref(storageService, tweetObj.attachmentURL));\n      }\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDoc(tweetTextRef, {\n      text: newTweet,\n    });\n    setEditing(false);\n  }\n\n  const toggleEditing = () => setEditing((prev) => !prev); // 토글 상태값 변경\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  }\n  return (\n    <div className=\"tweet\">\n      {\n        editing\n          ? (\n            <>\n              <form onSubmit={onSubmit} className=\"container tweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your tweet\"\n                  value={newTweet}\n                  required\n                  autoFocus\n                  onChange={onChange}\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          ) : (\n            <>\n              <h4>\n                {tweetObj.text}\n                {tweetObj.attachmentURL && <img src={tweetObj.attachmentURL} alt={tweetObj.text} />}\n              </h4>\n              {\n                isOwner &&\n                (\n                  <div className=\"tweet__actions\">\n                    <span onClick={onDeleteClick}>\n                      <FontAwesomeIcon icon={faTrash} />\n                    </span>\n                    <span onClick={toggleEditing}>\n                      <FontAwesomeIcon icon={faPencilAlt} />\n                    </span>\n                  </div>\n                )\n              }\n            </>)\n      }\n    </div>\n  )\n}\n\nexport default Tweet;","import { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addDoc, collection } from \"@firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { dbService, storageService } from \"myBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (tweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentURL = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(attachmentRef, attachment, \"data_url\");\n      attachmentURL = await getDownloadURL(response.ref);\n    }\n\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentURL,\n    }\n\n    await addDoc(collection(dbService, \"tweets\"), tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const { target: { value } } = event;\n    setTweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const { target: { files }, } = event;\n    const imgFile = files[0];\n    //use fileReader API\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const { currentTarget: { result } } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(imgFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment &&\n        (\n          <div className=\"factoryForm__attachment\">\n            <img\n              src={attachment}\n              style={{\n                backgroundImage: attachment,\n              }}\n              alt={tweet}\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n    </form>\n\n  );\n\n};\nexport default TweetFactory;","import { dbService } from \"myBase\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  collection,\n\n  onSnapshot,\n  query,\n  orderBy\n} from \"firebase/firestore\";\nimport Tweet from \"components/Tweet\";\nimport TweetFactory from \"components/TweetFactory\";\n\nconst Home = ({ userObj }) => {\n\n\n  const [tweets, setTweets] = useState([]);\n\n\n  // const getTweets = async () => {\n  //   const dbTweets = await getDocs(collection(dbService, \"tweets\"));\n  //   dbTweets.forEach((doc) => {\n  //     const tweetObj = {\n  //       ...doc.data(),\n  //       id: doc.id,\n  //     };\n  //     setTweets((prev) => [tweetObj, ...prev]);\n  //   });\n  // }\n\n  useEffect(() => {\n    //getTweets();\n    const q = query(collection(dbService, \"tweets\"), orderBy('createdAt'));\n    onSnapshot(q, (querySnapshot) => {\n      const tweetArray = querySnapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      });\n      setTweets(tweetArray);\n    });\n  }, [])\n\n\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n\n        ))}\n\n      </div>\n    </div>\n  );\n};\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav >\n  )\n};\n\nexport default Navigation;","import { updateProfile } from \"@firebase/auth\";\nimport { query, collection, getDocs, where, orderBy } from \"@firebase/firestore\";\nimport { authService, dbService } from \"myBase\";\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useState } from \"react/cjs/react.development\";\n\nconst Profile = ({ refreshAuth, userObj }) => {\n  const navigate = useNavigate();\n  const [newDisplayName, setDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    navigate('/');\n  };\n\n  const getMyTweets = async () => {\n    const q = query(collection(dbService, \"tweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createdAt\"));\n    const querySnapshot = await getDocs(q);\n\n    querySnapshot.forEach((doc) => {\n      console.log(doc.data());\n    })\n\n  };\n\n  useEffect(() => {\n    getMyTweets();\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, {\n        displayName: newDisplayName,\n      });\n      refreshAuth();\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDisplayName(value);\n  }\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display Name\"\n          onChange={onChange}\n          value={newDisplayName}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  )\n};\n\nexport default Profile;","import React from \"react\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshAuth, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <div\n        style={{\n          maxWidth: 890,\n          width: \"100%\",\n          margin: \"0 auto\",\n          marginTop: 80,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Routes>\n          {isLoggedIn ?\n            (\n              <>\n                <Route\n                  path=\"/\"\n                  element={<Home userObj={userObj} />}\n                />\n                <Route\n                  path=\"/profile\"\n                  element={<Profile userObj={userObj} refreshAuth={refreshAuth} />}\n                />\n              </>\n            )\n            :\n            (\n              <Route\n                path=\"/\"\n                element={<Auth />}\n              />\n            )\n          }\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"myBase\"\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //usefull change Page (use Auth)\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n\n  const refreshAuth = () => {\n    const user = authService.currentUser;\n    setUserObj(Object.assign({}, user));\n  };\n\n  return (\n    <div>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} refreshAuth={refreshAuth} userObj={userObj} /> : \"Initializing...\"}\n      <div>\n        <footer>&copy; {new Date().getFullYear()} twitter clone</footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}